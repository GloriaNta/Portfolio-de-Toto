{"ast":null,"code":"var _jsxFileName = \"/Users/glow/Documents/EMM/HTML + CSS/React/react-test/src/InputSpinner/InputSpinner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './InputSpinner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputSpinner = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  const onIncrement = () => {\n    setCount(count + 1);\n  };\n\n  const onDecrement = () => {\n    if (count <= 0) {\n      count = 0;\n    } else {\n      setCount(count - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InputSpinner horizontal\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://alikinvv.github.io/stepper/build/img/arrow.svg\",\n      onClick: onDecrement,\n      className: \"arrow top\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numbers1\",\n        children: [\" \", count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://alikinvv.github.io/stepper/build/img/arrow.svg\",\n      onClick: onIncrement,\n      className: \"arrow bottom\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputSpinner, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = InputSpinner;\nexport default InputSpinner;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSpinner\");","map":{"version":3,"sources":["/Users/glow/Documents/EMM/HTML + CSS/React/react-test/src/InputSpinner/InputSpinner.js"],"names":["React","useState","InputSpinner","count","setCount","onIncrement","onDecrement"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,oBAAP;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMI,WAAW,GAAG,MAAI;AACpBD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAI;AACnB,QAAIH,KAAK,IAAE,CAAX,EAAc;AACXA,MAAAA,KAAK,GAAG,CAAR;AACH,KAFA,MAEI;AACDC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;AAEJ,GAPD;;AASA,sBAEI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BAEI;AAAK,MAAA,GAAG,EAAC,wDAAT;AAAkE,MAAA,OAAO,EAAEG,WAA3E;AAAwF,MAAA,SAAS,EAAC,WAAlG;AAA8G,MAAA,GAAG,EAAC;AAAlH;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,wBAA6BH,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI;AAAK,MAAA,GAAG,EAAC,wDAAT;AAAkE,MAAA,OAAO,EAAEE,WAA3E;AAAwF,MAAA,SAAS,EAAC,cAAlG;AAAiH,MAAA,GAAG,EAAC;AAArH;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWH,CA3BD;;GAAMH,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport './InputSpinner.css';\n\n\nconst InputSpinner = () => {\n\n    const [count, setCount] = useState(0)\n    const onIncrement = ()=>{\n        setCount(count + 1);\n    };\n\n    const onDecrement = ()=>{\n         if (count<=0) {\n            count = 0;\n        }else{\n            setCount(count - 1);\n        }\n       \n    };\n\n    return (\n\n        <div className=\"InputSpinner horizontal\">\n            \n            <img src=\"https://alikinvv.github.io/stepper/build/img/arrow.svg\" onClick={onDecrement} className=\"arrow top\" alt=\"\" />\n            <div className=\"box\">\n                <div className=\"numbers1\"> { count } </div>\n            </div>\n            <img src=\"https://alikinvv.github.io/stepper/build/img/arrow.svg\" onClick={onIncrement} className=\"arrow bottom\" alt=\"\" />\n        </div>\n    );\n};\n\n\n\n\n\n\nexport default InputSpinner;\n\n"]},"metadata":{},"sourceType":"module"}